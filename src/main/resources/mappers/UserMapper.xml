<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">

    <!--查询部门列表信息  -->
    <select id="findAllUsers" resultMap="userRM" >
        select id,user_name,password,role_id,dept
        from user
    </select>

    <resultMap type="com.example.demo.model.UserEntity" id="userRM" autoMapping="true">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="role_id" property="roleId"/>
       <!-- <association property="parentDept" javaType="Dept">
            <id column="p_id" property="deptId"/>
            <result column="p_name" property="deptName"/>
        </association>-->
    </resultMap>

    <!--
        &lt;!&ndash;根据deptId查询部门信息
            collection中只写
            array:数组
            list: list集合
            map<ids,value>  map中的key
        &ndash;&gt;
        <delete id="deleteDepts">
            delete from dept_p where dept_id in(
            &lt;!&ndash;循环遍历输入Id  &ndash;&gt;
            <foreach collection="array" item="id" separator=",">
                #{id}
            </foreach>
            )
        </delete>


        &lt;!&ndash;修改状态  &ndash;&gt;
        <update id="updateState">
            update dept_p set state = #{state} where dept_id in (
            &lt;!&ndash;首先从map中获取数据 String[] ids={100,100100}
                collection="map中的key"
             &ndash;&gt;
            <foreach collection="deptIds" item="id" separator=",">
                #{id}
            </foreach>
            )
        </update>


        <select id="findParentList" resultType="Dept">
            select * from dept_p
        </select>

        &lt;!&ndash;部门的新增  &ndash;&gt;
        <insert id="saveDept">
            insert into dept_p(dept_id,parent_id,dept_name,state)
            values(
            #{deptId},#{parentDept.deptId},#{deptName},#{state}
            )
        </insert>


        &lt;!&ndash;查询单个部门对象  &ndash;&gt;
        <select id="findDeptById" resultMap="deptRM">
            select * from
            dept_p d
            left join
            (select dept_id p_id,dept_name p_name from dept_p) p
            on d.parent_id = p.p_id
            where dept_id = #{deptId}
        </select>

        <select id="findParentRemove" resultType="Dept">
            select * from dept_p where dept_id not in (#{deptId})
        </select>



        <update id="updateDept">
            update dept_p set
            dept_name=#{deptName},
            parent_id=#{parentDept.deptId},
            state = #{state}
            where dept_id = #{deptId}
        </update>-->




</mapper>
